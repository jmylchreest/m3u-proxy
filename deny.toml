# Configuration for cargo-deny
# See: https://embarkstudios.github.io/cargo-deny/

[graph]
# Don't include dev-dependencies in the dependency graph
exclude-dev = true

[advisories]
# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates that have been yanked from their source registry
yanked = "warn"
# The lint level for crates with security notices
notice = "warn"
# A list of advisory IDs to ignore
ignore = [
    # "RUSTSEC-0000-0000", # Example ignore
]

[licenses]
# The confidence threshold for detecting a license from a license text.
# 0.8 means we need to be 80% confident that the license text matches a known license.
confidence-threshold = 0.8

# List of explicitly allowed licenses
allow = [
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "MIT",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
    "Zlib",
    "OpenSSL",
]

# List of explicitly disallowed licenses
# Be sure to read up on each license to understand why it's banned
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-1.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
    "EUPL-1.0",
    "EUPL-1.1",
    "EUPL-1.2",
    "CDDL-1.0",
    "CDDL-1.1",
    "MPL-2.0",
]

# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"

# Confidence threshold for detecting a license from a license text.
# 0.8 means we must be 80% confident that the license text matches a known license.
confidence-threshold = 0.8

# Allow 1 or more licenses on a crate
exceptions = [
    # Some crates have multiple licenses, allow them here
    { allow = ["Apache-2.0", "MIT"], name = "openssl-sys" },
    { allow = ["Apache-2.0", "MIT"], name = "ring" },
]

[licenses.private]
# If true, ignores workspace crates that aren't published, or are only published to private registries
ignore = false
# One or more private registries that you might publish crates to
registries = [
    # "https://sekretz.com/registry"
]

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
# with multiple versions
# * lowest-version - The path to the lowest versioned duplicate is highlighted
# * simplest-path - The path to the version with the fewest edges is highlighted
# * all - Both lowest-version and simplest-path are used
highlight = "all"

# List of crates that are allowed. Use with care!
allow = [
    # "name@version",
]

# List of crates to deny
deny = [
    # "name@version",
    # Deny old versions of crates with known vulnerabilities
    { name = "openssl", version = "< 0.10.48" },
    { name = "chrono", version = "< 0.4.23" },
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    # "name@version",
]

# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies.
skip-tree = [
    # "name@version",
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not in the allow list is encountered
unknown-git = "warn"
# List of URLs for allowed crate registries. Defaults to the crates.io index if not specified.
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of URLs for allowed Git repositories
allow-git = []
