//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use chrono::{DateTime, Utc};
use uuid::Uuid;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "relay_runtime_status")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub channel_relay_config_id: Uuid,
    #[sea_orm(column_type = "Text", nullable)]
    pub process_id: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub sandbox_path: Option<String>,
    pub is_running: bool,
    pub started_at: Option<DateTime<Utc>>,
    pub client_count: i32,
    pub bytes_served: i32,
    #[sea_orm(column_type = "Text", nullable)]
    pub error_message: Option<String>,
    pub last_heartbeat: Option<DateTime<Utc>>,
    pub updated_at: DateTime<Utc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
