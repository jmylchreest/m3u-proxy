apiVersion: apps/v1
kind: Deployment
metadata:
  name: m3u-proxy-nvidia
  namespace: m3u-proxy
  labels:
    app: m3u-proxy
    gpu-type: nvidia
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: m3u-proxy
      gpu-type: nvidia
  template:
    metadata:
      labels:
        app: m3u-proxy
        gpu-type: nvidia
      annotations:
        configmap/checksum: "UPDATE_WITH_HASH"
    spec:
      # Security context for proper permissions
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        # Video group for GPU access
        supplementalGroups:
          - 44    # video group
      
      # Node selection for NVIDIA GPU nodes
      nodeSelector:
        # Ensure scheduling on nodes with NVIDIA GPU
        nvidia.com/gpu.present: "true"
        # Alternative: use custom labels
        # gpu: "nvidia"
      
      # Tolerations for GPU nodes (if they have taints)
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"
      
      containers:
        - name: m3u-proxy
          image: m3u-proxy:latest
          imagePullPolicy: IfNotPresent
          
          # Environment variables from ConfigMap
          envFrom:
            - configMapRef:
                name: m3u-proxy-config
          
          # Additional environment variables for NVIDIA
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # NVIDIA-specific environment
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "compute,utility,video"
          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          
          # Resource requests and limits for NVIDIA GPU
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
              nvidia.com/gpu: 1
            limits:
              memory: "4Gi"
              cpu: "2000m"
              nvidia.com/gpu: 1
          
          # Volume mounts
          volumeMounts:
            - name: data
              mountPath: /app/data
            - name: config
              mountPath: /app/config
          
          # Health checks
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 1
          
          # Security context (container level)
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
            capabilities:
              drop:
                - ALL
      
      # Volumes
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: m3u-proxy-data
        - name: config
          persistentVolumeClaim:
            claimName: m3u-proxy-config
      
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30