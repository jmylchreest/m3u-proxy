[database]
url = "sqlite://./m3u-proxy.db"
max_connections = 10

[database.batch_sizes]
epg_channels = 3600
epg_programs = 1900
stream_channels = 500

[web]
host = "0.0.0.0"
port = 8080
base_url = "http://localhost:8080"

[storage]
m3u_path = "./data/m3u"
uploaded_logo_path = "./data/logos/uploaded"
cached_logo_path = "./data/logos/cached"
proxy_versions_to_keep = 3
temp_path = "./data/temp"

[ingestion]
progress_update_interval = 1000
run_missed_immediately = true

[display]
local_timezone = "UTC"

[data_mapping_engine]
precheck_special_chars = "+-@#$%&*=<>!~`€£{}[]."
minimum_literal_length = 2

[proxy_generation]
enable_memory_tracking = true
enable_profiling = false

[proxy_generation.memory]
max_memory_mb = 512
batch_size = 1000
enable_parallel_processing = true
memory_check_interval = 100
warning_threshold = 0.8

[proxy_generation.epg]
include_past_programs = false
days_ahead = 7
days_behind = 1
normalize_to_utc = true
deduplicate_programs = true
max_programs_per_channel = 1000

[wasm_plugins]
enabled = true
plugin_directory = "../../target/wasm-plugins"
max_memory_per_plugin_mb = 64
timeout_seconds = 30
enable_hot_reload = false

[pipeline_strategies.default]
filtering = "passthrough_plugin"
channel_numbering = "passthrough_plugin"
epg_processing = "passthrough_plugin"
m3u_generation = "passthrough_plugin"
data_mapping = "library_test_plugin"
logo_prefetch = "passthrough_plugin"

[pipeline_strategies.performance]
data_mapping = "passthrough_plugin"
logo_prefetch = "passthrough_plugin"
filtering = "passthrough_plugin"
m3u_generation = "passthrough_plugin"
channel_numbering = "passthrough_plugin"
epg_processing = "passthrough_plugin"

[pipeline]
strategy = "default"

# Pipeline Accumulator Configuration
# Controls how consuming iterators are converted to immutable sources for multi-instance access
[pipeline.accumulator]
# Memory threshold in MB before spilling data to disk (default: 50MB)
# Small datasets (<50MB) stay in memory for best performance
memory_threshold_mb = 50

# Strategy selection for different data sizes:
# - "in_memory": Keep all data in memory (good for <1000 items)
# - "hybrid": Start in memory, spill to disk if threshold exceeded (recommended)
# - "file_spilled": Always use temporary files (good for very large datasets)
default_strategy = "hybrid"

# Number of items per spill file to avoid huge files (default: 10000)
items_per_spill_file = 10000

# Channel-specific accumulator settings
[pipeline.accumulator.channels]
# Memory threshold specifically for channel data (channels are typically larger)
memory_threshold_mb = 50
# Estimated size per channel in KB for memory calculations (default: 2KB)
estimated_size_per_item_kb = 2

# EPG-specific accumulator settings  
[pipeline.accumulator.epg]
# EPG data can be much larger, use lower memory threshold
memory_threshold_mb = 32
# EPG items are typically smaller but more numerous
estimated_size_per_item_kb = 1

# Configuration data accumulator settings
[pipeline.accumulator.config]
# Config data is usually small, keep in memory
memory_threshold_mb = 10
estimated_size_per_item_kb = 0.5

# Performance tuning notes:
# 
# Small Channel Lists (<5,000 channels):
#   - Use "in_memory" strategy for best performance
#   - Set memory_threshold_mb = 100 or higher
#
# Medium Channel Lists (5,000-50,000 channels):  
#   - Use "hybrid" strategy (recommended default)
#   - memory_threshold_mb = 50-256 depending on available RAM
#
# Large Channel Lists (>50,000 channels):
#   - Use "file_spilled" strategy to minimize memory usage
#   - Consider lower items_per_spill_file (5000-7500) for better streaming
#
# The accumulator automatically handles:
#   - Converting consuming plugin iterators to reusable immutable sources
#   - Memory management with configurable spilling to temporary files
#   - Automatic cleanup of temporary spill files via sandboxed file manager
#   - Logo enrichment tracking for channels
#   - Multi-instance iterator access from a single data source
