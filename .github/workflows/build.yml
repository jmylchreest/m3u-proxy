name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Quick validation job
  validate:
    name: Quick Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Test just commands work
        run: |
          echo "Testing just get-version..."
          just get-version
          echo "Testing just binary-path (should fail until built)..."
          just binary-path || echo "Expected failure - binary not built yet"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Quick check build
        run: cargo check --all-targets

  # Build job using your just commands
  build-test:
    name: Build and Test with Just
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-target-

      - name: Install dependencies
        run: just install

      - name: Build using just
        run: just build-versioned

      - name: Test binary info
        run: just binary-info

      - name: Run tests
        run: just test

      - name: Show version info
        run: |
          echo "Current version: $(just get-current-version)"
          echo "Git version: $(just get-version)"

  # Container build test (only on main branch to save resources)
  container-test:
    name: Test Container Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test container build (no push)
        run: |
          echo "Testing container build with just commands..."
          just build-container-versioned

          echo "Checking built images..."
          docker images m3u-proxy

      - name: Test binary in container
        run: |
          echo "Testing container can run..."
          VERSION=$(just get-version)
          timeout 10s docker run --rm m3u-proxy:$VERSION --help || echo "Container test completed"
