[database]
url = "sqlite:./data/m3u-proxy.db"

[web]
host = "0.0.0.0"
port = 8080

# Circuit breaker configuration with nested profiles
[circuitbreaker]
# Global defaults apply to all services unless overridden by profile
[circuitbreaker.global]
implementation_type = "rssafe"    # Options: "rssafe", "noop"
failure_threshold = 3             # Failures before opening circuit
operation_timeout = "5s"          # Individual operation timeout
reset_timeout = "30s"             # Wait time before trying half-open
success_threshold = 2             # Successes needed to close from half-open

# Service-specific profiles override global settings
[circuitbreaker.profiles]

# Database circuit breaker - more conservative 
[circuitbreaker.profiles.database]
implementation_type = "rssafe"
failure_threshold = 2             # Open faster for database issues
operation_timeout = "3s"          # Shorter timeout for database
reset_timeout = "60s"             # Wait longer before retry
success_threshold = 3             # Need more successes to trust again

# HTTP client circuit breaker - more permissive
[circuitbreaker.profiles.http_client]
implementation_type = "rssafe"
failure_threshold = 5             # Allow more failures for external services
operation_timeout = "10s"         # Longer timeout for network calls
reset_timeout = "30s"             # Standard reset time
success_threshold = 2             # Standard success threshold

# Logo fetching circuit breaker - very permissive
[circuitbreaker.profiles.logo_fetch]
implementation_type = "rssafe"
failure_threshold = 10            # Logo failures shouldn't break service
operation_timeout = "15s"         # Long timeout for image downloads
reset_timeout = "5m"              # Wait longer between retries
success_threshold = 1             # Just one success needed

# Example of disabled circuit breaker for testing
[circuitbreaker.profiles.test_service]
implementation_type = "noop"      # No circuit breaking, always passes through