# M3U Proxy Configuration Example
# Copy this file to config.toml and modify as needed

[database]
# Database connection URL
# Supported: sqlite://, postgres://, mysql://
url = "sqlite://./m3u-proxy.db"

# Maximum number of database connections
max_connections = 10

[web]
# Web server bind address
host = "0.0.0.0"

# Web server port
port = 8080

# Base URL for generating full URLs (logos, streams, etc.)
# This should be the public URL that clients will use to access the service
# Examples:
#   http://localhost:8080 (for local development)
#   https://m3u-proxy.example.com (for production with domain)
#   http://192.168.1.100:8080 (for local network access)
base_url = "http://localhost:8080"

[storage]
# Directory for M3U file storage
m3u_path = "./data/m3u"

# Directory for uploaded logos
uploaded_logo_path = "./data/logos/uploaded"

# Directory for cached logos
cached_logo_path = "./data/logos/cached"

# Number of proxy versions to keep (0 = only current)
proxy_versions_to_keep = 3

[ingestion]
# How often to update progress during channel processing (in number of channels)
# Lower values = more frequent updates but higher overhead
# Higher values = less frequent updates but better performance
progress_update_interval = 1000

# Whether to run missed scheduled refreshes immediately on startup
# If true, sources that missed their scheduled refresh will run immediately
# If false, sources will wait for their next scheduled time
run_missed_immediately = true

# Optional: Display configuration for EPG viewer and channel listings
[display]
# Local timezone for displaying times (default: UTC)
# Use IANA timezone names like "America/New_York", "Europe/London", etc.
local_timezone = "UTC"

# Optional: Data mapping engine optimization configuration
[data_mapping_engine]
# Special characters used for regex precheck filtering
# These characters are considered significant enough to use as first-pass filters
# Set to empty string "" to disable special character precheck
# Default: "+-@#$%&*=<>!~`€£{}[]."
precheck_special_chars = "+-@#$%&*=<>!~`€£{}[]."

# Minimum length required for literal strings in regex precheck
# Strings shorter than this will not be used for precheck filtering
# Set to 0 to disable literal string precheck entirely
# Default: 2
minimum_literal_length = 2

# Proxy generation configuration
[proxy_generation]
# Enable detailed memory tracking and reporting during generation
enable_memory_tracking = true

# Enable performance profiling (adds overhead but provides detailed timing)
enable_profiling = false

# Enable file spilling for memory pressure relief (requires sandboxed file manager)
enable_file_spilling = true

# Memory management configuration
[proxy_generation.memory]
# Maximum memory usage in MB for proxy generation (None = unlimited)
# When this limit is approached, the system will process in smaller batches
# Set to a value appropriate for your system (e.g., 512 for 512MB)
max_memory_mb = 512

# Number of channels to process in each batch
# Smaller batches use less memory but may be slower
# Larger batches are faster but use more memory
batch_size = 1000

# Enable parallel processing where possible
# Uses more memory but can be significantly faster on multi-core systems
enable_parallel_processing = true

# How often to check memory usage (in number of processed items)
# Lower values = more frequent checks but higher overhead
memory_check_interval = 100

# Memory warning threshold (0.0-1.0)
# System will log warnings when memory usage exceeds this percentage of max_memory_mb
warning_threshold = 0.8

# Memory strategy preset for handling pressure situations
# Options: "default", "conservative", "aggressive", "temp_file_based", "custom"
strategy_preset = "conservative"

# EPG generation configuration
[proxy_generation.epg]
# Include programs that have already ended
include_past_programs = false

# Number of days of future EPG data to include
days_ahead = 7

# Number of days of past EPG data to include
days_behind = 1

# Normalize all EPG times to UTC (recommended for consistency)
normalize_to_utc = true

# Remove duplicate programs with same title and time
deduplicate_programs = true

# Maximum number of programs per channel (None = unlimited)
# Limiting this can significantly reduce memory usage and generation time
max_programs_per_channel = 1000

# Source timezone for EPG normalization (None = auto-detect from EPG source)
# Only used when normalize_to_utc = true
# Use IANA timezone names like "America/New_York", "Europe/London", etc.
# source_timezone = "UTC"

# File manager configuration for temporary and cached files
[file_manager]
# Base directory for all file storage (default: system temp directory)
base_directory = "/tmp/m3u-proxy"

# Configuration for different file categories
# Each category can have its own retention policy and cleanup settings

[file_manager.categories.preview]
# Subdirectory for preview files (relative to base_directory)
subdirectory = "previews"
# How long to keep preview files (human-readable durations supported)
# Examples: "5m", "1h", "30s", "2h30m", "1d", "1w", "3months"
retention_duration = "5m"
# Which timestamp to use for cleanup decisions
# Options: "LastAccess", "Modified", "Created"
time_match = "LastAccess"
# Whether cleanup is enabled for this category
enabled = true
# Optional: Override cleanup interval (default: automatically calculated based on retention)
# cleanup_interval = "1m"

[file_manager.categories.logo]
subdirectory = "logos"
# Cache logos for 3 months
retention_duration = "3months"
time_match = "LastAccess"
enabled = true
# cleanup_interval = "12h"

[file_manager.categories.proxy_output]
subdirectory = "proxy-output"
# Keep generated proxy files for 30 days
retention_duration = "30days"
time_match = "LastAccess"
enabled = true
# cleanup_interval = "4h"

[file_manager.categories.temp]
subdirectory = "temp"
# Temporary files for memory spilling during proxy generation
retention_duration = "1h"
time_match = "LastAccess"
enabled = true
# cleanup_interval = "10m"

[file_manager.categories.cache]
subdirectory = "cache"
# General cache files
retention_duration = "7days"
time_match = "LastAccess"
enabled = true
# cleanup_interval = "2h"

# Sandboxed file manager configuration for secure operations
[sandboxed_file_manager]
# Enable sandboxed file operations (recommended for security)
enabled = true

# Security settings
[sandboxed_file_manager.security]
# Validate file paths to prevent directory traversal attacks
validate_paths = true
# Check for and prevent symlink-based sandbox escapes
validate_symlinks = true
# Restrict file operations to allowed file types
restrict_file_types = true

# File type validation configuration
# If restrict_file_types is true, only these MIME types will be allowed
# If empty or not specified, all file types are allowed
allowed_mime_types = [
    "application/vnd.apple.mpegurl", # M3U playlists
    "application/x-mpegurl",         # M3U playlists (alternative)
    "application/xml",               # XML files
    "text/xml",                      # XML files (alternative)
    "text/plain",                    # Plain text files
    "application/json",              # JSON files
    "image/png",                     # PNG images
    "image/jpeg",                    # JPEG images
    "image/gif",                     # GIF images
    "image/webp",                    # WebP images
    "image/svg+xml",                 # SVG images
]

# Maximum bytes to read from files for magic number detection
max_detection_bytes = 8192

# Whether to enable custom file type matchers (for special formats like M3U)
enable_custom_matchers = true

# Performance settings for file operations
[sandboxed_file_manager.performance]
# Maximum file size for spill operations (in MB)
max_spill_file_size_mb = 100
# Maximum number of concurrent file operations
max_concurrent_operations = 10
# Buffer size for file I/O operations (in KB)
io_buffer_size_kb = 64

# WASM Plugin System Configuration
[wasm_plugins]
# Enable WASM plugin system - when disabled, all stages use native implementations
enabled = true

# Optional: Directory containing WASM plugin files (.wasm files and their manifests)
# Default: "./target/wasm-plugins"
# plugin_directory = "./target/wasm-plugins"

# Optional: Plugin execution timeout in seconds - prevents stuck plugins from hanging the system
# Default: 30 seconds
# timeout_seconds = 30

# Optional: Enable hot reload of plugins (development feature) - automatically reload plugins when files change
# WARNING: Only use in development, not recommended for production
# Default: false
# enable_hot_reload = false

# Pipeline Strategy Configuration
# Define different strategies for which plugins to use at each pipeline stage.
# This allows you to have multiple configurations (e.g., performance vs memory-optimized)
# and switch between them by changing the 'strategy' setting below.

# DEFAULT STRATEGY - Balanced approach with plugin support
[pipeline_strategies.default]
# Data Mapping: Transform channel data using mapping rules
# - "passthrough_plugin": Uses native data mapping service
data_mapping = "passthrough_plugin"

# Filtering: Apply filters to channels based on configured rules
# - "passthrough_plugin": Uses native filter engine
filtering = "passthrough_plugin" 

# Logo Prefetch: Download and cache channel logos
# - "passthrough_plugin": Uses native logo service
logo_prefetch = "passthrough_plugin"

# Channel Numbering: Assign channel numbers to channels
# - "passthrough_plugin": Uses native numbering logic
channel_numbering = "passthrough_plugin"

# M3U Generation: Generate the final M3U playlist file
# - "passthrough_plugin": Uses native M3U generator
m3u_generation = "passthrough_plugin"

# EPG Processing: Process Electronic Program Guide data
# - "passthrough_plugin": Uses native EPG processing
epg_processing = "passthrough_plugin"

# MEMORY OPTIMIZED STRATEGY - Optimized for systems with limited memory
[pipeline_strategies.memory_optimized]
# All stages use native implementations for memory efficiency
data_mapping = "passthrough_plugin"
filtering = "passthrough_plugin"
logo_prefetch = "passthrough_plugin" 
channel_numbering = "passthrough_plugin"
m3u_generation = "passthrough_plugin"
epg_processing = "passthrough_plugin"

# PERFORMANCE STRATEGY - Maximum speed using native implementations
[pipeline_strategies.performance]
# All stages use native implementations for maximum performance
# This bypasses all plugin overhead and uses optimized native code
data_mapping = "passthrough_plugin"
filtering = "passthrough_plugin"
logo_prefetch = "passthrough_plugin"
channel_numbering = "passthrough_plugin"
m3u_generation = "passthrough_plugin"
epg_processing = "passthrough_plugin"

# Main pipeline configuration
[pipeline]
# Which pipeline strategy to use from the strategies defined above
# Options: "default", "memory_optimized", "performance", or any custom strategy you define
strategy = "default"

# Per-plugin configuration (optional, plugin-specific settings)
# These settings are passed to plugins when they are loaded and executed
[pipeline.plugin_configs.passthrough_plugin]
# Sample logging frequency (1 in N messages will be logged)
sample_log_frequency = 750

# Example: You could add configs for other plugins
# [pipeline.plugin_configs.custom_filter_plugin]
# filter_mode = "strict"
# max_channels = 5000
